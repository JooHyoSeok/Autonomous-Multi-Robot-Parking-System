<launch>

    <!-- For Robot_0 -->
    <arg name="namespace_one" default="robot_1"/>
    <node name="wheel_operator" pkg="dynamixel_workbench_operators" type="wheel_operator" required="true" output="screen" ns="$(arg namespace_one)"/>

    <!-- Dynamixel state subscribe node -->
    <group ns="$(arg namespace_one)">
        <node name="dynamixel_state_sub" pkg="multi_parking_sys" type="dynamixel_state_sub" output="screen"/>
    </group>

    <group ns="$(arg namespace_one)">
        <!-- cartographer_node -->
        <remap from ="imu" to ="imu_0" />
        
        <param name="/use_sim_time" value="false" />
        <node pkg="cartographer_ros" type="cartographer_node" name="cartographer_node" 
            args="-configuration_directory $(find multi_parking_sys)/lua -configuration_basename $(arg namespace_one)_rplidar.lua
            "
            output="screen">
        </node>

        <!-- cartographer_occupancy_grid_node -->
        <node pkg="cartographer_ros" type="cartographer_occupancy_grid_node"
            name="cartographer_occupancy_grid_node" 
            args="-resolution 0.05" >
        </node>
    </group>

    <!-- imu pub node -->
    <!-- <node name="imu_pub" pkg="imu_test" type="imu_pub" output="screen"/> -->

    <!-- state publisher -->
    <node pkg="tf" type="static_transform_publisher" name="$(arg namespace_one)_map_to_$(arg namespace_one)_odom"  args="0 0 0 0 0 0 /$(arg namespace_one)/map /$(arg namespace_one)/odom 100"/>
    <node pkg="tf" type="static_transform_publisher" name="$(arg namespace_one)_base_to_laser_broadcaster" args="0 0 0 1.5708 0 3.141592 /$(arg namespace_one)/base_link /$(arg namespace_one)/laser 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg namespace_one)_base_to_imu_broadcaster" args="0 0 0 0 0 0 /$(arg namespace_one)/base_link /$(arg namespace_one)/imu 100" />

    <!-- rviz -->
    <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find multi_parking_sys)/rviz/operator_one.rviz" />
    
</launch>
